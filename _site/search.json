[
  {
    "objectID": "MP02.html",
    "href": "MP02.html",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "",
    "text": "Honoring the Green, the Lean, and the Gas-Guzzling Machines! 🌱🔥\nNew York, NY – Public transit plays a crucial role in reducing carbon footprints, but not all agencies are created equal. Some transit systems have become champions of eco-efficiency, while others… well, let’s just say they have room for improvement.\nAfter analyzing emissions data from transit agencies nationwide, we proudly present the 2025 Clean Transit Awards, recognizing the best (and worst) in sustainable transit. These awards highlight Small, Medium, and Large agencies that have made a measurable impact on their carbon footprint—or left tire marks on the environment.\nSo, without further ado, let’s reveal the greenest, the most improved, and, of course, the biggest gas guzzlers!\n\n\nThis prestigious award goes to the transit agencies that produce the least emissions per passenger trip and per mile traveled. In other words, these winners are basically the Tesla Model S of buses—except way more affordable and accessible.\nBy Passenger Trips:\n🥇Large Agency Winner: New Jersey Transit Corporation\n🥇Medium Agency Winner: King County, dba: King County Metro\n🥇Small Agency Winner: Small Altoona Metro Transit, dba: AMTRAN\nBy Passenger Mile:\n🥇Large Agency Winner:🚆New Jersey Transit Corporation,\n🥇Medium Agency Winner: King County, dba: King County Metro,\n🥇Small Agency Winner: Small Altoona Metro Transit, dba: AMTRA,\n\n\n\n“If pollution had an arch-nemesis, it would be these guys.”\nImagine a world where all transit riders suddenly switched to single-passenger cars. 🚗🚗🚗 Yikes! The traffic jams would be longer than your uncle’s conspiracy theories at Thanksgiving, and emissions would skyrocket.\nThis award goes to the transit agencies that saved us from the most pollution by preventing countless solo car trips.\n🥇 Large Agency Winner: MTA New York City Transit 3441010874 avoided\n🥇 Medium Agency Winner: Metro-North Commuter Railroad Company, dba: MTA Metro-North Railroad 413801729 avoided\n🥇 Small Agency Winner: Hampton Jitney, Inc. 1333301 avoided\n\n\n\n“From gas-guzzler to eco-hustler!”\nThis award goes to the agency that has made the biggest leap toward sustainability—not by comparing to past-year data, but by seeing who improved the most compared to their peers.\n🥇 Large Agency Winner: New Jersey Transit Corporation Reduced from 0.1260740 to 0.0002060647 per mile\n🥇 Medium Agency Winner: King County, dba: King County Metro Reduced from 0.2200267 to 0.0001889437 per mile\n🥇 Small Agency Winner: Altoona Metro Transit, dba: AMTRAN – Reduced from 0.3648839 to 0.0015635784 per mile\n\n\n\n“Not all heroes wear capes… and not all transit agencies are heroes.”Not every agency can be a green machine. This award “honors” those transit agencies that burn through fuel like it’s going out of style, producing the highest emissions per passenger mile. (Spoiler alert: This is NOT the award you want to win.)\n🥇 Large Agency Winner: Chicago Transit Authority 162.6084 kg CO₂ per mile\n🥇 Medium Agency Winner: West Virginia University, dba: Personal Rapid Transit 645.1318 kg CO₂ per mile\n🥇 Small Agency Winner: Pennsylvania Department of Transportation 273.8586 CO₂ per mile\nWhile some agencies are already champions of green transit, others have some serious catching up to do. The 2025 Clean Transit Awards highlight the best in eco-friendly transportation while also shining a spotlight on areas that need improvement. 🚆 The takeaway? Cities that invest in sustainable transit are making a real impact on emissions. Meanwhile, gas guzzlers (we’re looking at you, WVU!) still have some work to do. For a full breakdown of the data, check out the Appendix in our official report. Spoiler alert: numbers don’t lie, and neither do emissions reductions!"
  },
  {
    "objectID": "MP02.html#greenest-transit-agency-the-mvp-most-valuable-pollution-reducer-award",
    "href": "MP02.html#greenest-transit-agency-the-mvp-most-valuable-pollution-reducer-award",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "",
    "text": "This prestigious award goes to the transit agencies that produce the least emissions per passenger trip and per mile traveled. In other words, these winners are basically the Tesla Model S of buses—except way more affordable and accessible.\nBy Passenger Trips:\n🥇Large Agency Winner: New Jersey Transit Corporation\n🥇Medium Agency Winner: King County, dba: King County Metro\n🥇Small Agency Winner: Small Altoona Metro Transit, dba: AMTRAN\nBy Passenger Mile:\n🥇Large Agency Winner:🚆New Jersey Transit Corporation,\n🥇Medium Agency Winner: King County, dba: King County Metro,\n🥇Small Agency Winner: Small Altoona Metro Transit, dba: AMTRA,"
  },
  {
    "objectID": "MP02.html#most-emissions-avoided-the-carbon-buster-award",
    "href": "MP02.html#most-emissions-avoided-the-carbon-buster-award",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "",
    "text": "“If pollution had an arch-nemesis, it would be these guys.”\nImagine a world where all transit riders suddenly switched to single-passenger cars. 🚗🚗🚗 Yikes! The traffic jams would be longer than your uncle’s conspiracy theories at Thanksgiving, and emissions would skyrocket.\nThis award goes to the transit agencies that saved us from the most pollution by preventing countless solo car trips.\n🥇 Large Agency Winner: MTA New York City Transit 3441010874 avoided\n🥇 Medium Agency Winner: Metro-North Commuter Railroad Company, dba: MTA Metro-North Railroad 413801729 avoided\n🥇 Small Agency Winner: Hampton Jitney, Inc. 1333301 avoided"
  },
  {
    "objectID": "MP02.html#most-improved-green-agency-the-comeback-kid-award",
    "href": "MP02.html#most-improved-green-agency-the-comeback-kid-award",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "",
    "text": "“From gas-guzzler to eco-hustler!”\nThis award goes to the agency that has made the biggest leap toward sustainability—not by comparing to past-year data, but by seeing who improved the most compared to their peers.\n🥇 Large Agency Winner: New Jersey Transit Corporation Reduced from 0.1260740 to 0.0002060647 per mile\n🥇 Medium Agency Winner: King County, dba: King County Metro Reduced from 0.2200267 to 0.0001889437 per mile\n🥇 Small Agency Winner: Altoona Metro Transit, dba: AMTRAN – Reduced from 0.3648839 to 0.0015635784 per mile"
  },
  {
    "objectID": "MP02.html#biggest-gas-guzzler-the-oh-no-fix-that-award",
    "href": "MP02.html#biggest-gas-guzzler-the-oh-no-fix-that-award",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "",
    "text": "“Not all heroes wear capes… and not all transit agencies are heroes.”Not every agency can be a green machine. This award “honors” those transit agencies that burn through fuel like it’s going out of style, producing the highest emissions per passenger mile. (Spoiler alert: This is NOT the award you want to win.)\n🥇 Large Agency Winner: Chicago Transit Authority 162.6084 kg CO₂ per mile\n🥇 Medium Agency Winner: West Virginia University, dba: Personal Rapid Transit 645.1318 kg CO₂ per mile\n🥇 Small Agency Winner: Pennsylvania Department of Transportation 273.8586 CO₂ per mile\nWhile some agencies are already champions of green transit, others have some serious catching up to do. The 2025 Clean Transit Awards highlight the best in eco-friendly transportation while also shining a spotlight on areas that need improvement. 🚆 The takeaway? Cities that invest in sustainable transit are making a real impact on emissions. Meanwhile, gas guzzlers (we’re looking at you, WVU!) still have some work to do. For a full breakdown of the data, check out the Appendix in our official report. Spoiler alert: numbers don’t lie, and neither do emissions reductions!"
  },
  {
    "objectID": "MP02.html#data-import",
    "href": "MP02.html#data-import",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.1 📊 Data Import",
    "text": "2.1 📊 Data Import\nWe started by acquiring data from EIA State Electricity Profiles, which we will use to estimate the environmental impact of the electricity used to run certain transit systems. 🚗\n\n2.1.0.1 State Electricity Profiles 🏛️\nFor purposes of this analysis, we will assume that all electricity generation in a state is fungible. That is, we will assign the average generation emissions to all-electric transit in a state, even if the transit authority officially has a “green supply” agreement in place.\n\n\nShow Code\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(DT)\nlibrary(tidyr)\nlibrary(readr)\nlibrary(stringr) # Needed for str_replace_all()\nlibrary(purrr) # Needed for map2()\nlibrary(quarto) # Ensures Quarto execution works\n\n\n\n\nShow Code\n# Load libraries\nensure_package &lt;- function(pkg){\n    pkg &lt;- as.character(substitute(pkg))\n    options(repos = c(CRAN = \"https://cloud.r-project.org\"))\n    if(!require(pkg, character.only=TRUE)) install.packages(pkg)\n    stopifnot(require(pkg, character.only=TRUE))\n}\nensure_package(stringr)  # Ensure it's installed\nensure_package(dplyr)\nensure_package(httr2)\nensure_package(rvest)\nensure_package(datasets)\nensure_package(purrr)\nensure_package(DT)\n\nget_eia_sep &lt;- function(state, abbr){\n    state_formatted &lt;- str_to_lower(state) |&gt; str_replace_all(\"\\\\s\", \"\")\n    \n    dir_name &lt;- file.path(\"data\", \"mp02\")\n    file_name &lt;- file.path(dir_name, state_formatted)\n    \n    dir.create(dir_name, showWarnings=FALSE, recursive=TRUE)\n    \n    if(!file.exists(file_name)){\n        BASE_URL &lt;- \"https://www.eia.gov\"\n        REQUEST &lt;- request(BASE_URL) |&gt; \n            req_url_path(\"electricity\", \"state\", state_formatted)\n    \n        RESPONSE &lt;- req_perform(REQUEST)\n    \n        resp_check_status(RESPONSE)\n        \n        writeLines(resp_body_string(RESPONSE), file_name)\n    }\n    \n    TABLE &lt;- read_html(file_name) |&gt; \n        html_element(\"table\") |&gt; \n        html_table() |&gt;\n        mutate(Item = str_to_lower(Item))\n    \n    if(\"U.S. rank\" %in% colnames(TABLE)){\n        TABLE &lt;- TABLE |&gt; rename(Rank = `U.S. rank`)\n    }\n    \n    CO2_MWh &lt;- TABLE |&gt; \n        filter(Item == \"carbon dioxide (lbs/mwh)\") |&gt;\n        pull(Value) |&gt; \n        str_replace_all(\",\", \"\") |&gt;\n        as.numeric()\n    \n    PRIMARY &lt;- TABLE |&gt; \n        filter(Item == \"primary energy source\") |&gt; \n        pull(Rank)\n    \n    RATE &lt;- TABLE |&gt;\n        filter(Item == \"average retail price (cents/kwh)\") |&gt;\n        pull(Value) |&gt;\n        as.numeric()\n    \n    GENERATION_MWh &lt;- TABLE |&gt;\n        filter(Item == \"net generation (megawatthours)\") |&gt;\n        pull(Value) |&gt;\n        str_replace_all(\",\", \"\") |&gt;\n        as.numeric()\n    \n    data.frame(CO2_MWh               = CO2_MWh, \n               primary_source        = PRIMARY,\n               electricity_price_MWh = RATE * 10, # / 100 cents to dollars &\n               # * 1000 kWh to MWH \n               generation_MWh        = GENERATION_MWh, \n               state                 = state, \n               abbreviation          = abbr\n    )\n}\n\nEIA_SEP_REPORT &lt;- map2(state.name, state.abb, get_eia_sep) |&gt; list_rbind()\n\nensure_package(scales)\nensure_package(DT)\n\nEIA_SEP_REPORT |&gt; \n    select(-abbreviation) |&gt;\n    arrange(desc(CO2_MWh)) |&gt;\n    mutate(CO2_MWh = scales::number(CO2_MWh, big.mark=\",\"), \n           electricity_price_MWh = scales::dollar(electricity_price_MWh), \n           generation_MWh = scales::number(generation_MWh, big.mark=\",\")) |&gt;\n    rename(`Pounds of CO2 Emitted per MWh of Electricity Produced`=CO2_MWh, \n           `Primary Source of Electricity Generation`=primary_source, \n           `Average Retail Price for 1000 kWh`=electricity_price_MWh, \n           `Total Generation Capacity (MWh)`= generation_MWh, \n           State=state) |&gt;\n    kable(caption = \"EIA State Electricity Profile Report\")\n\n\n\nEIA State Electricity Profile Report\n\n\n\n\n\n\n\n\n\nPounds of CO2 Emitted per MWh of Electricity Produced\nPrimary Source of Electricity Generation\nAverage Retail Price for 1000 kWh\nTotal Generation Capacity (MWh)\nState\n\n\n\n\n1,925\nCoal\n$102.60\n52,286,784\nWest Virginia\n\n\n1,864\nCoal\n$83.90\n43,181,420\nWyoming\n\n\n1,741\nCoal\n$99.60\n63,217,080\nKentucky\n\n\n1,514\nCoal\n$108.70\n66,703,285\nMissouri\n\n\n1,497\nCoal\n$114.90\n90,046,880\nIndiana\n\n\n1,444\nPetroleum\n$386.00\n9,194,164\nHawaii\n\n\n1,414\nCoal\n$80.30\n42,068,807\nNorth Dakota\n\n\n1,354\nCoal\n$90.30\n33,496,554\nUtah\n\n\n1,180\nNatural gas\n$214.10\n6,717,825\nAlaska\n\n\n1,148\nNatural gas\n$127.20\n62,548,705\nWisconsin\n\n\n1,127\nCoal\n$109.70\n26,895,758\nMontana\n\n\n1,103\nCoal\n$91.40\n39,445,955\nNebraska\n\n\n1,095\nNatural gas\n$128.50\n4,772,059\nDelaware\n\n\n1,054\nCoal\n$117.60\n57,541,720\nColorado\n\n\n1,044\nNatural gas\n$110.40\n133,223,464\nOhio\n\n\n987\nNatural gas\n$97.30\n63,195,647\nArkansas\n\n\n966\nNatural gas\n$89.10\n97,784,565\nLouisiana\n\n\n923\nNatural gas\n$232.10\n19,695,884\nMassachusetts\n\n\n912\nNatural gas\n$136.80\n120,656,625\nMichigan\n\n\n855\nNatural gas\n$100.40\n547,294,552\nTexas\n\n\n847\nNatural gas\n$216.20\n10,430,846\nRhode Island\n\n\n817\nNatural gas\n$109.50\n72,933,440\nMississippi\n\n\n801\nWind\n$122.10\n57,276,862\nMinnesota\n\n\n794\nNatural gas\n$135.30\n259,798,479\nFlorida\n\n\n775\nWind\n$94.20\n69,836,973\nIowa\n\n\n763\nWind\n$108.00\n58,456,598\nKansas\n\n\n759\nWind\n$94.70\n39,269,073\nNew Mexico\n\n\n733\nNatural gas\n$110.60\n129,221,513\nGeorgia\n\n\n727\nNatural gas\n$114.70\n139,435,010\nAlabama\n\n\n715\nNuclear\n$106.90\n77,791,204\nTennessee\n\n\n684\nNatural gas\n$121.90\n111,838,736\nArizona\n\n\n655\nNatural gas\n$125.70\n235,924,937\nPennsylvania\n\n\n654\nNatural gas\n$130.90\n42,164,375\nNevada\n\n\n648\nNatural gas\n$93.00\n89,236,024\nOklahoma\n\n\n639\nNatural gas\n$106.10\n126,553,394\nNorth Carolina\n\n\n594\nNatural gas\n$106.80\n91,059,344\nVirginia\n\n\n576\nNatural gas\n$242.40\n40,666,418\nConnecticut\n\n\n558\nNatural gas\n$143.40\n36,000,650\nMaryland\n\n\n558\nNuclear\n$105.00\n100,853,387\nSouth Carolina\n\n\n522\nNuclear\n$117.50\n177,737,641\nIllinois\n\n\n522\nNatural gas\n$182.80\n124,039,988\nNew York\n\n\n518\nNatural gas\n$152.70\n64,228,924\nNew Jersey\n\n\n440\nNatural gas\n$248.70\n216,628,794\nCalifornia\n\n\n428\nNatural gas\n$208.40\n12,512,181\nMaine\n\n\n370\nHydroelectric\n$90.80\n17,842,446\nIdaho\n\n\n369\nWind\n$104.90\n17,436,158\nSouth Dakota\n\n\n344\nHydroelectric\n$103.20\n61,691,869\nOregon\n\n\n292\nHydroelectric\n$95.80\n102,960,605\nWashington\n\n\n269\nNuclear\n$229.60\n16,824,999\nNew Hampshire\n\n\n8\nHydroelectric\n$175.30\n2,480,199\nVermont\n\n\n\n\n\n🌍 Here, we have collected the effective emissions per MWh2⚡ as well as price and total state-wide generation capacity. We will use this data to compare the emissions of different transit modalities. We next turn to the National Transit Database to get information on various public transit authorities. Before we do so, however, let’s explore the SEP data a bit first.🔬📉"
  },
  {
    "objectID": "MP02.html#initial-analysis-of-sep-data",
    "href": "MP02.html#initial-analysis-of-sep-data",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.2 🔍 Initial Analysis of SEP Data ⚖️",
    "text": "2.2 🔍 Initial Analysis of SEP Data ⚖️\nLet’s answer some burning (fossil-free, we hope!) questions: 🚇\n\n2.2.1 1. Which state has the most expensive retail electricity? 💰⚡\nWhich state will make you cry when you get your electricity bill? 😭 Let’s find out!\n\n\nShow Code\nEIA_SEP_REPORT |&gt; \n  arrange(desc(electricity_price_MWh)) |&gt; \n  select(state, electricity_price_MWh) |&gt; \n  head(1) |&gt; \n  kable(caption = \"Most Expensive Retail Electricity\")\n\n\n\nMost Expensive Retail Electricity\n\n\nstate\nelectricity_price_MWh\n\n\n\n\nHawaii\n386\n\n\n\n\n\n\n\n2.2.2 2. Which state has the ‘dirtiest’ electricity mix? ☠️🌫️\nWhich state’s power plants are puffing out CO₂ like an angry dragon? 🐉🔥 Stay tuned for some shocking revelations!\n\n\nShow Code\nEIA_SEP_REPORT |&gt; \n  arrange(desc(CO2_MWh)) |&gt; \n  select(state, CO2_MWh) |&gt; \n  head(1) |&gt; \n  kable(caption = \"Dirtiest electricity mix\")\n\n\n\nDirtiest electricity mix\n\n\nstate\nCO2_MWh\n\n\n\n\nWest Virginia\n1925\n\n\n\n\n\n\n\n2.2.3 3. On average, how many pounds of CO2 are emitted per MWh of electricity produced in the US?🏭\nTime for some serious math! 📊 We’ll calculate the national average CO₂ emissions per MWh using a weighted average because we like our stats accurate.🎯\n\n\nShow Code\n# Calculate weighted average CO2 emissions\nweighted_avg_CO2 &lt;- sum(EIA_SEP_REPORT$CO2_MWh * EIA_SEP_REPORT$generation_MWh) / \n  sum(EIA_SEP_REPORT$generation_MWh)\n\ndata.frame(Weighted_Avg_CO2 = weighted_avg_CO2) |&gt; \n  kable(col.names = c(\"Weighted Average CO2 Emissions (lbs/MWh)\"),\n        caption = \"Weighted Average CO2 Emissions Across All States\")\n\n\n\nWeighted Average CO2 Emissions Across All States\n\n\nWeighted Average CO2 Emissions (lbs/MWh)\n\n\n\n\n805.3703\n\n\n\n\n\n\n\n2.2.4 4. 🦄 What is the rarest primary energy source in the US? What is the associated cost of electricity and where is it used?🧐\nWhat’s the mythical unicorn of US energy sources? 🦄✨ And where is it hiding? Let’s track it down and see how much it costs! 💸\n\n\nShow Code\nEIA_SEP_REPORT |&gt; \n  count(primary_source) |&gt; \n  arrange(n) |&gt; \n  slice(1) |&gt; \n  inner_join(EIA_SEP_REPORT, by = \"primary_source\") |&gt; \n  select(state, primary_source, electricity_price_MWh) |&gt; \n  kable(caption = \"Primary Energy Source with Lowest Occurrence\")\n\n\n\nPrimary Energy Source with Lowest Occurrence\n\n\nstate\nprimary_source\nelectricity_price_MWh\n\n\n\n\nHawaii\nPetroleum\n386\n\n\n\n\n\n\n\n2.2.5 5. My home state, Texas, has a reputation as being the home of “dirty fossil fuels” while NY has a reputation as a leader in clean energy. How many times cleaner is NY’s energy mix than that of Texas?🌱🔥\nIs Texas really the king of fossil fuels? 👑 And does New York truly deserve its green halo? 😇 Let’s compare their energy mixes and see how many times cleaner NY is compared to TX! 📊⚖️\n\n\nShow Code\nNY_CO2 &lt;- EIA_SEP_REPORT |&gt; filter(state == \"New York\") |&gt; pull(CO2_MWh)\nTX_CO2 &lt;- EIA_SEP_REPORT |&gt; filter(state == \"Texas\") |&gt; pull(CO2_MWh)\n\ncleaner_ratio &lt;- TX_CO2 / NY_CO2\n\ntibble(Metric = \"Cleaner Ratio (TX to NY)\", Value = cleaner_ratio) |&gt; \n  kable(caption = \"Texas vs. New York CO2 Emissions Ratio\")\n\n\n\nTexas vs. New York CO2 Emissions Ratio\n\n\nMetric\nValue\n\n\n\n\nCleaner Ratio (TX to NY)\n1.637931\n\n\n\n\n\nFun fact: New York’s energy mix is cleaner than Texas’s by a factor of 1.637931. That’s right, the Lone Star State might want to take notes from the Big Apple! 🍏⚡"
  },
  {
    "objectID": "MP02.html#importing-2023-annual-database-energy-consumption-report",
    "href": "MP02.html#importing-2023-annual-database-energy-consumption-report",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.3 Importing 2023 Annual Database Energy Consumption Report ⚡📊",
    "text": "2.3 Importing 2023 Annual Database Energy Consumption Report ⚡📊\nTo analyze the energy consumption data for public transit agencies, we first need to import the 2023 Annual Database Energy Consumption report. This Dataset is provided in an Excel spreadsheet (.xlsx) format. We will use the readxl package in R to load it.\n\n\nShow Code\nensure_package(readxl)\n# Create 'data/mp02' directory if not already present\nDATA_DIR &lt;- file.path(\"data\", \"mp02\")\ndir.create(DATA_DIR, showWarnings=FALSE, recursive=TRUE)\n\nNTD_ENERGY_FILE &lt;- file.path(DATA_DIR, \"2023_ntd_energy.xlsx\")\n\nif(!file.exists(NTD_ENERGY_FILE)){\n    DS &lt;- download.file(\"https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-10/2023%20Energy%20Consumption.xlsx\", \n                  destfile=NTD_ENERGY_FILE, \n                  method=\"curl\")\n    \n    if(DS | (file.info(NTD_ENERGY_FILE)$size == 0)){\n        cat(\"I was unable to download the NTD Energy File. Please try again.\\n\")\n        stop(\"Download failed\")\n    }\n}\n\nNTD_ENERGY_RAW &lt;- read_xlsx(NTD_ENERGY_FILE)\n\n\n\n\nShow Code\n### Data Cleaning 🧹\n\n\nensure_package(tidyr)\nto_numeric_fill_0 &lt;- function(x){\n    x &lt;- if_else(x == \"-\", NA, x)\n    replace_na(as.numeric(x), 0)\n}\n\nNTD_ENERGY &lt;- NTD_ENERGY_RAW |&gt; \n    select(-c(`Reporter Type`, \n              `Reporting Module`, \n              `Other Fuel`, \n              `Other Fuel Description`)) |&gt;\n    mutate(across(-c(`Agency Name`, \n                     `Mode`,\n                     `TOS`), \n                  to_numeric_fill_0)) |&gt;\n    group_by(`NTD ID`, `Mode`, `Agency Name`) |&gt;\n    summarize(across(where(is.numeric), sum), \n              .groups = \"keep\") |&gt;\n    mutate(ENERGY = sum(c_across(c(where(is.numeric))))) |&gt;\n    filter(ENERGY &gt; 0) |&gt;\n    select(-ENERGY) |&gt;\n    ungroup()\n\n\n\n2.3.1 🎲 The Wheel of Randomness! 🎰\nLadies and gentlemen, it’s time for the Random Transit Energy Lottery! 🎉🎟️ We’ll now select 10 lucky transit energy records at random! Who will make the cut? Who will be left behind? Let’s spin the wheel! 🔄✨\n\n\nShow Code\n# Sample 10 random rows and then pass them to kable()\nNTD_ENERGY |&gt; \n  slice_sample(n = 10) |&gt; \n  kable(caption = \"Random Sample of NTD_ENERGY Data\")\n\n\n\nRandom Sample of NTD_ENERGY Data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNTD ID\nMode\nAgency Name\nBio-Diesel\nBunker Fuel\nC Natural Gas\nDiesel Fuel\nElectric Battery\nElectric Propulsion\nEthanol\nMethonal\nGasoline\nHydrogen\nKerosene\nLiquified Nat Gas\nLiquified Petroleum Gas\n\n\n\n\n60056\nMB\nDallas Area Rapid Transit\n0\n0\n8811975\n0\n302999\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n6\nMB\nCity of Yakima\n0\n0\n0\n154538\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n90009\nDR\nSan Mateo County Transit District\n0\n0\n0\n0\n0\n0\n0\n0\n232752\n0\n0\n0\n0\n\n\n40022\nHR\nMetropolitan Atlanta Rapid Transit Authority\n0\n0\n0\n0\n0\n77059623\n0\n0\n0\n0\n0\n0\n0\n\n\n30026\nDR\nRiver Valley Transit Authority\n0\n0\n0\n0\n0\n0\n0\n0\n8893\n0\n0\n0\n0\n\n\n20004\nMB\nNiagara Frontier Transportation Authority\n0\n0\n968439\n957405\n9444\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n20002\nMB\nCapital District Transportation Authority\n0\n0\n0\n2070980\n137732\n0\n0\n0\n7360\n0\n0\n0\n0\n\n\n40185\nMB\nBay County Transportation Planning Organization\n0\n0\n0\n90870\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n60017\nMB\nCentral Oklahoma Transportation and Parking Authority\n0\n0\n594146\n253820\n56424\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n40035\nRB\nCentral Florida Regional Transportation Authority\n0\n0\n0\n0\n10575\n0\n0\n0\n0\n0\n0\n0\n0"
  },
  {
    "objectID": "MP02.html#recoding-transit-modes",
    "href": "MP02.html#recoding-transit-modes",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.4 🚇 Recoding Transit Modes 🚋🎭",
    "text": "2.4 🚇 Recoding Transit Modes 🚋🎭\n🚧 Warning: Mysterious Codes Ahead! 🚧\nBefore we can make sense of the Mode column, we need to crack the code! 🕵️‍♂️ First, let’s uncover the unique Mode codes in our data using distinct(). Then, we consult the sacred texts (a.k.a. the NTD website 📜) to decipher their meanings. 🧐\n\n2.4.1 🏗️ Time for a Makeover! 🖌️\nThe Mode column needs a glow-up! ✨ We’re about to give those cryptic abbreviations some real names so they’re easier to work with. Ready? Let’s do this! 🎬\n\n\nShow Code\nNTD_ENERGY &lt;- NTD_ENERGY |&gt;\n  mutate(Mode = case_when(\n    Mode == \"HR\"  ~ \"Heavy Rail\", \n    Mode == \"LR\"  ~ \"Light Rail\", \n    Mode == \"CR\"  ~ \"Commuter Rail\", \n    Mode == \"MB\"  ~ \"Motor Bus\", \n    Mode == \"TB\"  ~ \"Trolleybus\", \n    Mode == \"TR\"  ~ \"Heritage Streetcar\", \n    Mode == \"SR\"  ~ \"Modern Streetcar\", \n    Mode == \"VP\"  ~ \"Vanpool\", \n    Mode == \"DR\"  ~ \"Demand Response\", \n    Mode == \"FB\"  ~ \"Ferryboat\", \n    Mode == \"MG\"  ~ \"Monorail/Automated Guideway\", \n    Mode == \"PB\"  ~ \"Publico\", \n    Mode == \"CB\"  ~ \"Commuter Bus\",\n    Mode == \"RB\"  ~ \"Rapid Bus\",\n    Mode == \"AR\"  ~ \"Aerial Tramway\",\n    Mode == \"YR\"  ~ \"Hybrid Rail\",\n    Mode == \"IP\"  ~ \"Inclined Plane Railway\",\n    Mode == \"CC\"  ~ \"Cable Car\",\n    TRUE          ~ \"Unknown\"\n  ))\n\nNTD_ENERGY |&gt; distinct(Mode) |&gt;\nkable(caption = \"Distinct Modes of Transport\")\n\n\n\nDistinct Modes of Transport\n\n\nMode\n\n\n\n\nDemand Response\n\n\nFerryboat\n\n\nMotor Bus\n\n\nModern Streetcar\n\n\nTrolleybus\n\n\nVanpool\n\n\nCommuter Bus\n\n\nRapid Bus\n\n\nLight Rail\n\n\nMonorail/Automated Guideway\n\n\nCommuter Rail\n\n\nAerial Tramway\n\n\nHeritage Streetcar\n\n\nHeavy Rail\n\n\nHybrid Rail\n\n\nInclined Plane Railway\n\n\nPublico\n\n\nCable Car"
  },
  {
    "objectID": "MP02.html#annual-database-service-by-agency",
    "href": "MP02.html#annual-database-service-by-agency",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.5 2023 Annual Database Service by Agency 📊🚇",
    "text": "2.5 2023 Annual Database Service by Agency 📊🚇\n🚨 Breaking News! 🚨 The latest 2023 Service by Agency report has just dropped! 🎤📉 We’re diving in to extract the juicy details about passenger trips across different transit services. 🚆🚌\n\n\nShow Code\nNTD_SERVICE_FILE &lt;- file.path(DATA_DIR, \"2023_service.csv\")\nif(!file.exists(NTD_SERVICE_FILE)){\n    DS &lt;- download.file(\"https://data.transportation.gov/resource/6y83-7vuw.csv\", \n                  destfile=NTD_SERVICE_FILE, \n                  method=\"curl\")\n    \n    if(DS | (file.info(NTD_SERVICE_FILE)$size == 0)){\n        cat(\"I was unable to download the NTD Service File. Please try again.\\n\")\n        stop(\"Download failed\")\n    }\n}\n\nNTD_SERVICE_RAW &lt;- read_csv(NTD_SERVICE_FILE)\n\n\n📢 Will our dataset arrive safely, or will it ghost us? 👻 Only time (and a stable internet connection) will tell! ⏳"
  },
  {
    "objectID": "MP02.html#clean-up-time",
    "href": "MP02.html#clean-up-time",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.6 Clean-Up Time! 🧹✨",
    "text": "2.6 Clean-Up Time! 🧹✨\n\n\nShow Code\nNTD_SERVICE &lt;- NTD_SERVICE_RAW |&gt;\n    mutate(`NTD ID` = as.numeric(`_5_digit_ntd_id`)) |&gt; \n    rename(Agency = agency, \n           City   = max_city, \n           State  = max_state,\n           UPT    = sum_unlinked_passenger_trips_upt, \n           MILES  = sum_passenger_miles) |&gt;\n    select(matches(\"^[A-Z]\", ignore.case=FALSE)) |&gt;\n    filter(MILES &gt; 0)\n\n\n🛠️ Boom! Now our dataset is sparkling clean! ✨ It’s time to put these numbers to work! 💪"
  },
  {
    "objectID": "MP02.html#exploring-ntd-service-data---lets-dive-in",
    "href": "MP02.html#exploring-ntd-service-data---lets-dive-in",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.7 🛥️ Exploring NTD Service Data - Let’s Dive In!",
    "text": "2.7 🛥️ Exploring NTD Service Data - Let’s Dive In!\nAlright, folks! Time to put on our data analyst hats and explore some seriously juicy transit numbers from the NTD_SERVICE Dataset. We’re going to answer some fun questions that might just reveal who’s cruising on the green lane of transit efficiency and who’s still stuck in the slow lane. Let’s see how this data speeds up the fun! 😎\n\n2.7.1 1. Which transit service has the most UPT annually? 🏆\nWhich transit service is the busiest, with the most Unlinked Passenger Trips (UPT) annually? Spoiler alert: It’s probably not the one with the tiniest buses.🚌\n\n\nShow Code\nNTD_SERVICE |&gt;\n  filter(!is.na(UPT)) |&gt;\n  arrange(desc(UPT)) |&gt;\n  select(Agency, UPT) |&gt;\n  head(1) |&gt;\n  kable(caption = \"Most UTP Annually\")\n\n\n\nMost UTP Annually\n\n\nAgency\nUPT\n\n\n\n\nMTA New York City Transit\n2632003044\n\n\n\n\n\n\n\n2.7.2 2. What is the average trip length of a trip on MTA NYC? 🗽\nTime for some serious subway sleuthing! 🕵️‍♂️ How long is the average trip on the MTA NYC? Are New Yorkers making quick, subway sprints, or are they getting comfy for a longer ride? We’re on a mission to figure out just how far these trips stretch, so hop on board! 🚇⏳\n\n\nShow Code\nNTD_SERVICE |&gt;\n  filter(grepl(\"MTA\", Agency, ignore.case = TRUE)) |&gt;\n  summarise(Average_Trip_Length = sum(MILES, na.rm = TRUE) / sum(UPT, na.rm = TRUE)) |&gt;\n  kable(caption = \"Average Trip Length On MTA Nyc\")\n\n\n\nAverage Trip Length On MTA Nyc\n\n\nAverage_Trip_Length\n\n\n\n\n4.562402\n\n\n\n\n\n\n\n2.7.3 3. Which transit service in NYC has the longest average trip length? 🚋\nWhich MTA service in New York City (including all five boroughs, yes, even Brooklyn 🗽) has the longest average trip length? Let’s just say, it’s probably not the one where the subway rats are the most frequent passengers. 🐀\nP.S. You’ll want to be extra careful with that City column; we wouldn’t want to accidentally send our buses on a detour to Brooklyn when they should be cruising through Manhattan!\n\n\nShow Code\nNYC_SERVICES &lt;- NTD_SERVICE |&gt;\n  filter(State == \"NY\", MILES &gt; 0, UPT &gt; 0) |&gt;\n  mutate(Average_Trip_Length = MILES / UPT) |&gt;\n  arrange(desc(Average_Trip_Length)) |&gt;\n  select(Agency, City, Average_Trip_Length)\n\nhead(NYC_SERVICES, 1) |&gt;\nkable(caption = \"NYC Longest Average Trip Length\")\n\n\n\nNYC Longest Average Trip Length\n\n\nAgency\nCity\nAverage_Trip_Length\n\n\n\n\nHampton Jitney, Inc.\nCalverton\n92.4465\n\n\n\n\n\n\n\n2.7.4 4. Which state has the fewest total miles travelled by public transit? 🐢\nWhich state is the turtle in the race, with the fewest total miles travelled by public transit? 🐢 Are some states just cruising along at a leisurely pace, or are they barely moving at all? It’s time to find out who’s not clocking up the miles! 🛑🚗\n\n\nShow Code\nNTD_SERVICE |&gt;\n  group_by(State) |&gt;\n  summarise(Total_Miles = sum(MILES, na.rm = TRUE)) |&gt;\n  arrange(Total_Miles) |&gt;\n  head(1) |&gt;\n  kable(caption = \"Fewest total miles Travelled By Public Transit\")\n\n\n\nFewest total miles Travelled By Public Transit\n\n\nState\nTotal_Miles\n\n\n\n\nNH\n3749892\n\n\n\n\n\n\n\n2.7.5 5. Are all states represented in this data? If no, which ones are missing? The state.name and state.abb objects we used above may be useful here.🚏🗺️\nNow for a little mystery – are all states in this data? Or did a few sneak out of the spotlight? 👀 Let’s use the state.name and state.abb to track down any states that may have taken the wrong exit. Looks like it’s time for a little data detective work! 🔍💼\n\n\nShow Code\nall_states &lt;- state.abb  # Vector of all US state abbreviations\npresent_states &lt;- unique(NTD_SERVICE$State)\nmissing_states &lt;- setdiff(all_states, present_states)\nkable(missing_states, caption = \"Missing States\")\n\n\n\nMissing States\n\n\nx\n\n\n\n\nAZ\n\n\nAR\n\n\nCA\n\n\nCO\n\n\nHI\n\n\nIA\n\n\nKS\n\n\nLA\n\n\nMO\n\n\nMT\n\n\nNE\n\n\nNV\n\n\nNM\n\n\nND\n\n\nOK\n\n\nSD\n\n\nTX\n\n\nUT\n\n\nWY"
  },
  {
    "objectID": "MP02.html#calculate-emissions-lets-crunch-some-carbon",
    "href": "MP02.html#calculate-emissions-lets-crunch-some-carbon",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.8 🌍 Calculate Emissions – Let’s Crunch Some Carbon! 💨",
    "text": "2.8 🌍 Calculate Emissions – Let’s Crunch Some Carbon! 💨\nTime to put on our environmental cap and get down to the nitty-gritty of CO2 emissions! We’re about to take a deep dive into some data to calculate the total emissions from different transit agencies and their modes. Spoiler alert: We’re going green – but with a twist! 🌱🔢\n\n2.8.1 Join the Three Tables – The Ultimate Data Party 🎉\nHere’s where we get our hands dirty (but in an eco-friendly way, of course!). We’ll join three tables together like the perfect data trio:\nNTD_SERVICE 🚍 – It tells us the Agency and Mode (because, let’s face it, transit is all about style, right?)\nNTD_ENERGY ⚡ – This table’s going to give us the lowdown on all the fuel sources. It’s like fuel’s Wikipedia page, but with more numbers.\nEIA_SEP_REPORT 📊 – This is where the magic happens! It tells us the CO2 emissions per MWh. Time to add some climate-friendly math into the mix. Once we’ve got these three tables chatting with each other, we’re ready to roll!\n\n\nShow Code\n# Create a mapping of state abbreviations to full names\nstate_abbrev_to_full &lt;- c(\n  \"AL\" = \"Alabama\", \"AK\" = \"Alaska\", \"AZ\" = \"Arizona\", \"AR\" = \"Arkansas\", \"CA\" = \"California\", \"CO\" = \"Colorado\", \n  \"CT\" = \"Connecticut\", \"DE\" = \"Delaware\", \"FL\" = \"Florida\", \"GA\" = \"Georgia\", \"HI\" = \"Hawaii\", \"ID\" = \"Idaho\", \n  \"IL\" = \"Illinois\", \"IN\" = \"Indiana\", \"IA\" = \"Iowa\", \"KS\" = \"Kansas\", \"KY\" = \"Kentucky\", \"LA\" = \"Louisiana\", \n  \"ME\" = \"Maine\", \"MD\" = \"Maryland\", \"MA\" = \"Massachusetts\", \"MI\" = \"Michigan\", \"MN\" = \"Minnesota\", \"MS\" = \"Mississippi\", \n  \"MO\" = \"Missouri\", \"MT\" = \"Montana\", \"NE\" = \"Nebraska\", \"NV\" = \"Nevada\", \"NH\" = \"New Hampshire\", \"NJ\" = \"New Jersey\", \n  \"NM\" = \"New Mexico\", \"NY\" = \"New York\", \"NC\" = \"North Carolina\", \"ND\" = \"North Dakota\", \"OH\" = \"Ohio\", \"OK\" = \"Oklahoma\", \n  \"OR\" = \"Oregon\", \"PA\" = \"Pennsylvania\", \"RI\" = \"Rhode Island\", \"SC\" = \"South Carolina\", \"SD\" = \"South Dakota\", \n  \"TN\" = \"Tennessee\", \"TX\" = \"Texas\", \"UT\" = \"Utah\", \"VT\" = \"Vermont\", \"VA\" = \"Virginia\", \"WA\" = \"Washington\", \n  \"WV\" = \"West Virginia\", \"WI\" = \"Wisconsin\", \"WY\" = \"Wyoming\"\n)\n\n# Fix State Names in NTD_SERVICE before joining\nNTD_SERVICE &lt;- NTD_SERVICE |&gt; mutate(State = state_abbrev_to_full[State])\n\n# Now perform the joins\nNTD_EMISSIONS &lt;- NTD_SERVICE |&gt;\n  select(Agency, State, `NTD ID`) |&gt;\n  inner_join(NTD_ENERGY, by = \"NTD ID\") |&gt;\n  inner_join(EIA_SEP_REPORT, by = c(\"State\" = \"state\"))\n\n# Check if the join worked\ndim(NTD_EMISSIONS)  # Should no longer be (0, X)\n\n\n[1] 650  23\n\n\n\n\n2.8.2 The Ultimate Emissions Table 🧮\nWe’re going to create a super sleek table with all the goods:\nAgency + Mode Pair – These are the dynamic duos of transit! 🚍🚆\nState – Every agency has a home, and we’ll find out which state it’s calling its turf! 🌎\nFuel Sources – Because we need to know how those buses are powering through your city streets! 🚨\nCO2 Emissions per MWh – Let’s see how much carbon’s being emitted for every megawatt-hour of power. (The more we know, the greener we grow! 🌳)\nNow, let’s clean up some fuel names and make sure everything aligns:\n\n\nShow Code\nNTD_EMISSIONS &lt;- NTD_EMISSIONS |&gt; \n  rename(\n    \"Bio diesel\" = \"Bio-Diesel\",\n    \"Natural Gas\" = \"C Natural Gas\",\n    \"LNG\" = \"Liquified Nat Gas\",\n    \"LPG\" = \"Liquified Petroleum Gas\",\n    \"Battery Electric\" = \"Electric Battery\",\n    \"Electric\" = \"Electric Propulsion\"\n  )\n\n\n\n\n2.8.3 The Formula – It’s Math, But Make It Eco! 🧑‍🏫\nNow for the fun part – the math! 💡\nWe’re going to use a long-ish arithmetic formula (don’t worry, it’s just a couple of steps) inside a mutate function to compute the total emissions for each Agency + Mode Pair. We’ll need to convert combustion fuels to CO2 emissions – but don’t panic, we’ve got conversion factors! 💪 You can hard code these bad boys in your script for simplicity:\n\n\nShow Code\nfuel_emission_factors &lt;- c(\n  \"Diesel Fuel\" = 10.19,    # kg CO2 per gallon\n  \"Gasoline\" = 8.89,\n  \"Natural Gas\" = 52.91,    # kg CO2 per MMBtu\n  \"LPG\" = 5.79,  \n  \"LNG\" = 4.29,\n  \"Kerosene\" = 9.96,\n  \"Ethanol\" = 1.94,\n  \"Hydrogen\" = 0,           # No emissions from hydrogen\n  \"Battery Electric\" = 0,   # Handled separately using CO2_MWh\n  \"Electric\" = 0            # Handled separately using CO2_MWh\n)\n\n\nThen, apply the emissions calculation:\n\n\nShow Code\nNTD_EMISSIONS &lt;- NTD_EMISSIONS |&gt;\n  mutate(\n    Fuel_Emissions = (`Diesel Fuel` * fuel_emission_factors[\"Diesel Fuel\"]) +\n      (`Gasoline` * fuel_emission_factors[\"Gasoline\"]) +\n      (`Natural Gas` * fuel_emission_factors[\"Natural Gas\"]) +\n      (`LPG` * fuel_emission_factors[\"LPG\"]) +\n      (`LNG` * fuel_emission_factors[\"LNG\"]) +\n      (`Kerosene` * fuel_emission_factors[\"Kerosene\"]) +\n      (`Ethanol` * fuel_emission_factors[\"Ethanol\"]) +\n      (`Hydrogen` * fuel_emission_factors[\"Hydrogen\"])\n  )\n\nNTD_EMISSIONS &lt;- NTD_EMISSIONS |&gt;\n  mutate(\n    Electricity_Emissions = `Electric` * CO2_MWh\n  )\n\nNTD_EMISSIONS &lt;- NTD_EMISSIONS |&gt;\n  mutate(\n    Total_Emissions = Fuel_Emissions + Electricity_Emissions\n  )\n\n\n💚 Let’s Save the Planet – One Data Row at a Time! Now that our emissions data is ready, let’s take a look at the final product! 🌍\n\n\nShow Code\nNTD_EMISSIONS |&gt; select(Agency, Mode, State, Fuel_Emissions, Electricity_Emissions, Total_Emissions) |&gt; arrange(desc(Total_Emissions))\n\n\n# A tibble: 650 × 6\n   Agency       Mode  State Fuel_Emissions Electricity_Emissions Total_Emissions\n   &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;          &lt;dbl&gt;                 &lt;dbl&gt;           &lt;dbl&gt;\n 1 MTA New Yor… Heav… New …             0           807152731200   807152731200 \n 2 MTA Long Is… Comm… New …      72196486.          286155388800   286227585286.\n 3 Metro-North… Comm… New …      71313390.          211429086408   211500399798.\n 4 New Jersey … Comm… New …     143674231.          189542379222   189686053453.\n 5 Chicago Tra… Heav… Illi…             0           177353391510   177353391510 \n 6 Southeaster… Comm… Penn…             0           134209031675   134209031675 \n 7 Massachuset… Heav… Mass…             0           125346279760   125346279760 \n 8 Southeaster… Heav… Penn…             0            75871258865    75871258865 \n 9 Metropolita… Heav… Geor…             0            56484703659    56484703659 \n10 Port Author… Heav… New …             0            51187752738    51187752738 \n# ℹ 640 more rows"
  },
  {
    "objectID": "MP02.html#normalize-emissions-to-transit-usage",
    "href": "MP02.html#normalize-emissions-to-transit-usage",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.9 Normalize Emissions to Transit Usage 🚆",
    "text": "2.9 Normalize Emissions to Transit Usage 🚆\nIn this task, we’re on a mission to normalize emissions (a fancy way of saying “make fair comparisons”) based on:\nEmissions per Unlinked Passenger Trip (UPT) 🚌👥\nEmissions per Passenger Mile 🚋🌱\n\n2.9.1 Normalize Emissions – Leveling the Playing Field! 🎯\nBefore we start handing out gold medals 🏅 (or shameful side-eyes 👀), we normalize emissions based on ridership. This ensures a fair fight—because comparing a tiny rural bus route to New York City’s subway isn’t exactly fair, right? 😆\n\n\nShow Code\n# Filter out agencies with extremely small values to avoid distortions\n\nAGENCY_NORMALIZED &lt;- NTD_SERVICE %&gt;%   # Use your actual dataset\n  left_join(NTD_EMISSIONS, by = \"NTD ID\") %&gt;%\n  filter(!is.na(Total_Emissions))  # Ensure you have valid emission data\n\n# Filter out agencies with extremely small values to avoid distortions\nAGENCY_NORMALIZED &lt;- AGENCY_NORMALIZED %&gt;%\n  filter(UPT &gt; 1000, MILES &gt; 1000) %&gt;%  # Adjust thresholds as needed\n  mutate(\n    Emissions_per_UPT = ifelse(UPT &gt; 0, Total_Emissions / UPT, NA),\n    Emissions_per_Passenger_Mile = ifelse(MILES &gt; 0, Total_Emissions / MILES, NA)\n  )\n\n\n🚦 Now, with that done, let’s move on to finding our champions!"
  },
  {
    "objectID": "MP02.html#the-greenest-transit-agency-gta-iv-award-1",
    "href": "MP02.html#the-greenest-transit-agency-gta-iv-award-1",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.10 🥇 The Greenest Transit Agency (GTA IV Award #1) 🌱🚆",
    "text": "2.10 🥇 The Greenest Transit Agency (GTA IV Award #1) 🌱🚆\nWhich agency has the lowest emissions per passenger trip? And which one produces the least pollution per mile traveled?\nLet’s roll out the green carpet and announce the winners! 🎤🥁\n\n\nShow Code\nAGENCY_NORMALIZED &lt;- AGENCY_NORMALIZED %&gt;%\n  mutate(Size_Category = case_when(\n    UPT &lt; 10^6 ~ \"Small\",\n    UPT &gt;= 10^6 & UPT &lt; 10^8 ~ \"Medium\",\n    UPT &gt;= 10^8 ~ \"Large\"\n  ))\n\n\n\n2.10.1 Find the greenest transit agency by lowest emissions per UPT\n\n\nShow Code\nAGENCY_NORMALIZED &lt;- AGENCY_NORMALIZED %&gt;%\n  rename(Agency = Agency.x)  # Rename \"Agency.x\" to \"Agency\"\n\ngreenest_agency_UPT &lt;- AGENCY_NORMALIZED %&gt;%\n  filter(!is.na(Size_Category) & Emissions_per_UPT &gt; 0) %&gt;%\n  group_by(Size_Category) %&gt;%\n  slice_min(Emissions_per_UPT, n = 1, with_ties = FALSE) %&gt;%\n  select(Size_Category, Agency, Emissions_per_UPT)\nkable(greenest_agency_UPT, caption = \"Greenest Agency By lowest Emissions Per UPT\")\n\n\n\nGreenest Agency By lowest Emissions Per UPT\n\n\nSize_Category\nAgency\nEmissions_per_UPT\n\n\n\n\nLarge\nNew Jersey Transit Corporation\n0.0024015\n\n\nMedium\nKing County, dba: King County Metro\n0.0007222\n\n\nSmall\nAltoona Metro Transit, dba: AMTRAN\n0.0056772\n\n\n\n\n\n\n\n2.10.2 Find the greenest transit agency by lowest emissions per Passenger Mile\n\n\nShow Code\ngreenest_agency_mile &lt;- AGENCY_NORMALIZED %&gt;%\n    filter(!is.na(Size_Category) & Emissions_per_UPT &gt; 0) %&gt;%\n  group_by(Size_Category) %&gt;%\n  slice_min(Emissions_per_Passenger_Mile, n = 1, with_ties = FALSE) %&gt;%\n  select(Size_Category, Agency, Emissions_per_Passenger_Mile)\nkable(greenest_agency_mile, caption= \"Greenest Transit Agency By Lowest Emissions Per Passenger Mile\")\n\n\n\nGreenest Transit Agency By Lowest Emissions Per Passenger Mile\n\n\n\n\n\n\n\nSize_Category\nAgency\nEmissions_per_Passenger_Mile\n\n\n\n\nLarge\nNew Jersey Transit Corporation\n0.0002061\n\n\nMedium\nKing County, dba: King County Metro\n0.0001889\n\n\nSmall\nAltoona Metro Transit, dba: AMTRAN\n0.0015636"
  },
  {
    "objectID": "MP02.html#total-emissions-avoided-gta-iv-award-2",
    "href": "MP02.html#total-emissions-avoided-gta-iv-award-2",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.11 Total Emissions Avoided (GTA IV Award #2) 🌱🚆",
    "text": "2.11 Total Emissions Avoided (GTA IV Award #2) 🌱🚆\nNow, let’s compute the total emissions avoided by public transit. Because without it, we’d have millions of solo drivers making traffic even worse than it already is! 😱🚗🚕🚙\nHow do we do this?\n1️⃣ Estimate emissions if all transit passengers drove cars instead.\n2️⃣ Use US CAFE fuel standards to convert miles to gasoline usage.\n3️⃣ Calculate emissions avoided by taking public transit instead of driving.\nUsed average CAFE standard of 24.7 mpg and CO2 emissions of 8.89 kg per gallon\n\n\nShow Code\nAGENCY_NORMALIZED &lt;- AGENCY_NORMALIZED %&gt;%\n  mutate(\n    Gallons_of_fuel = MILES / 24.7,  # Convert miles to fuel gallons\n    Emissions_from_driving = Gallons_of_fuel * 8.89,  # Convert gallons to CO2\n    Emissions_avoided = Emissions_from_driving - Total_Emissions  # Calculate CO2 saved\n  )\n\n\n\n2.11.1 Find agency with most emissions avoided 🏆\n\n\nShow Code\nmost_emissions_avoided_by_size &lt;- AGENCY_NORMALIZED %&gt;%\n  filter(!is.na(Size_Category)) %&gt;%  # Ensure valid categories\n  group_by(Size_Category) %&gt;%\n  slice_max(Emissions_avoided, n = 1, with_ties = FALSE) %&gt;%\n  select(Size_Category, Agency, Emissions_avoided)\nkable(most_emissions_avoided_by_size, caption = \"Most Emissions Avoided\")\n\n\n\nMost Emissions Avoided\n\n\n\n\n\n\n\nSize_Category\nAgency\nEmissions_avoided\n\n\n\n\nLarge\nMTA New York City Transit\n3441010874\n\n\nMedium\nMetro-North Commuter Railroad Company, dba: MTA Metro-North Railroad\n413801729\n\n\nSmall\nHampton Jitney, Inc.\n13333018\n\n\n\n\n\nThis agency has officially saved the planet more than your coworker with the reusable straw. 🌱💚♻️\n\n\n2.11.2 🏆Most Improved Green Agency (GTA IV Award #3) 🚆 🏆\nThis award recognizes the transit agency that has demonstrated the most significant improvement in environmental efficiency compared to its peers. Instead of using past-year data (which may not always be available), this award is given to the agency that has the largest improvement relative to the median emissions per passenger mile in its category (Large, Medium, or Small).\n\n\nShow Code\nmost_improved_agency &lt;- AGENCY_NORMALIZED %&gt;%\n  filter(!is.na(Emissions_per_Passenger_Mile) & Emissions_per_Passenger_Mile &gt; 0) %&gt;%\n  group_by(Size_Category) %&gt;%\n  mutate(median_emissions = median(Emissions_per_Passenger_Mile, na.rm = TRUE)) %&gt;%\n  mutate(emissions_improvement = median_emissions - Emissions_per_Passenger_Mile) %&gt;%\n  slice_max(order_by = emissions_improvement, n = 1) %&gt;%  # Select top in each category\n  ungroup() %&gt;%\n  select(Agency, Size_Category, Emissions_per_Passenger_Mile, median_emissions, emissions_improvement)\n\nkable(most_improved_agency, caption = \"Most Improved Agency\")\n\n\n\nMost Improved Agency\n\n\n\n\n\n\n\n\n\nAgency\nSize_Category\nEmissions_per_Passenger_Mile\nmedian_emissions\nemissions_improvement\n\n\n\n\nNew Jersey Transit Corporation\nLarge\n0.0002061\n0.1260740\n0.1258680\n\n\nKing County, dba: King County Metro\nMedium\n0.0001889\n0.2200267\n0.2198378\n\n\nAltoona Metro Transit, dba: AMTRAN\nSmall\n0.0015636\n0.3648839\n0.3633203\n\n\n\n\n\n\n\n2.11.3 💀Biggest Gas Guzzler⛽ (GTA IV Award #4) 🌱🚆\nThis award highlights the least fuel-efficient transit agencies in each size category (Large, Medium, Small). The “Biggest Gas Guzzler” is the agency with the highest Emissions per Passenger Mile, indicating it produces the most pollution per mile traveled by a passenger. This award serves as a benchmark for identifying areas where fuel efficiency improvements and sustainability measures are most needed.\n\n\nShow Code\nbiggest_gas_guzzler_by_size &lt;- AGENCY_NORMALIZED %&gt;%\n  filter(!is.na(Size_Category)) %&gt;%\n  group_by(Size_Category) %&gt;%\n  slice_max(Emissions_per_Passenger_Mile, n = 1, with_ties = FALSE) %&gt;%\n  select(Size_Category, Agency, Emissions_per_Passenger_Mile)\n\nkable(biggest_gas_guzzler_by_size, caption =\"Biggest Gas Guzzler\")\n\n\n\nBiggest Gas Guzzler\n\n\n\n\n\n\n\nSize_Category\nAgency\nEmissions_per_Passenger_Mile\n\n\n\n\nLarge\nChicago Transit Authority\n162.6084\n\n\nMedium\nWest Virginia University, dba: Personal Rapid Transit\n645.1318\n\n\nSmall\nPennsylvania Department of Transportation\n273.8586"
  },
  {
    "objectID": "MP02.html#visualizations",
    "href": "MP02.html#visualizations",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.12 📈 Visualizations 🎨",
    "text": "2.12 📈 Visualizations 🎨\n\n2.12.0.1 🚍 Greenest Transit Agency - A Breath of Fresh Air! 🌍\n\n\nShow Code\ngreenest_data &lt;- data.frame(\n  Agency = c(\"New Jersey Transit Corporation\", \"King County, dba: King County Metro\", \"Altoona Metro Transit, dba: AMTRAN\"),\n  Size_Category = c(\"Large\", \"Medium\", \"Small\"),\n  Emissions_per_UPT = c(0.0024014936, 0.0007222026, 0.0056772412),\n  Emissions_per_Passenger_Mile = c(0.0002060647, 0.0001889437, 0.0015635784)\n) %&gt;% pivot_longer(cols = c(Emissions_per_UPT, Emissions_per_Passenger_Mile), \n                    names_to = \"Metric\", values_to = \"Emissions\")\n\n# Adjusting graph to make sure bars are visible\nggplot(greenest_data, aes(x = reorder(Agency, Emissions), y = Emissions, fill = Metric)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.7) +  # Increased bar width\n  geom_text(aes(label = Size_Category), position = position_dodge(width = 0.7), vjust = -0.5, color = \"black\", size = 4) +  # Increased text size\n  labs(title = \"Greenest Transit Agency\", y = \"Emissions (kg CO₂)\", fill = \"Metric\") +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, max(greenest_data$Emissions) + 0.002)) +  # Adjust y-axis to ensure bars are visible\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nTalk about making a clean getaway! The MTA Bus Company and its smaller counterparts are taking the “green” route. We’re not just talking about eco-friendly buses, but real reductions in emissions. A round of applause for the greenest of them all!\n\n\n2.12.0.2 🌱 Most Emissions Avoided - The Green Warriors 💨\n\n\nShow Code\n# Define the emissions data\nemissions_data &lt;- data.frame(\n  Agency = c(\"MTA New York City Transit\", \"Metro-North Commuter Railroad Company\", \"Hampton Jitney, Inc.\"),\n  Emissions_Avoided = c(3441010874, 413801729, 13333018)\n)\n# Create the plot\nggplot(emissions_data, aes(x = reorder(Agency, Emissions_Avoided), y = Emissions_Avoided, fill = Agency)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  labs(title = \"Most Emissions Avoided\", y = \"CO₂ Avoided (kg)\", x = \"Agency\") +\n  theme_minimal() +\n  scale_y_log10(labels = scales::comma) +  # Apply logarithmic scale to the y-axis\n  geom_text(aes(label = scales::comma(Emissions_Avoided)), hjust = -0.1, size = 2)  # Adjust text positioning and size\n\n\n\n\n\n\n\n\n\nThese agencies are saving the planet one ride at a time! Hudson Transit Lines and its pals are on a mission to leave the world with fewer emissions. They’re all about that “low-carbon footprint” lifestyle!\n\n\n2.12.0.3 🚀 Most Improved Green Agency - Turning Green Around! 🌿\n\n\nShow Code\n## Most Improved Green Agency (Dumbbell Chart)\nlibrary(ggalt)\nimproved_data &lt;- data.frame(\n  Agency = c(\"MTA Bus Company\", \"Champaign-Urbana Mass Transit\", \"City of Decatur Transit\"),\n  Before = c(0.1260740,0.2200267, 0.3648839),\n  After = c(0.0002060647,0.0001889437, 0.0015635784)\n)\n\nggplot(improved_data, aes(y = Agency, x = Before, xend = After)) +\n  geom_dumbbell(color = \"blue\", size = 4, dot_guide = TRUE, dot_guide_size = 0.5) +\n  labs(title = \"Most Improved Green Agency\", x = \"Emissions per Mile (kg CO₂)\", y = \"Agency\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThese agencies took the emissions “downshift” seriously! The MTA Bus Company may have started off with high emissions, but it’s now a model of green efficiency. Talk about a green makeover!\n\n\n2.12.0.4 🛢️ Biggest Gas Guzzler - Oops, It’s Guzzling More than Gas! 🍃\n\n\nShow Code\nguzzler_data &lt;- data.frame(\n  Agency = c(\"Chicago Transit Authority\", \"WVU Personal Rapid Transit\", \"Pennsylvania DOT\"),\n  Emissions = c(162.6084, 645.1, 273.9)\n)\n\nggplot(guzzler_data, aes(x = reorder(Agency, -Emissions), y = Emissions, fill = Emissions)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_gradient(low = \"yellow\", high = \"red\") +\n  labs(title = \"Biggest Gas Guzzler\", y = \"Emissions per Mile (kg CO₂)\", x = \"Agency\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nSome agencies need to take a carbon diet! Looks like WVU Personal Rapid Transit took the term “gas guzzler” to the extreme. Maybe they should swap out those heavy engines for some electric vibes."
  },
  {
    "objectID": "MP02.html#conclusion",
    "href": "MP02.html#conclusion",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.13 📢 Conclusion",
    "text": "2.13 📢 Conclusion\n🚆 Public transit plays a huge role in reducing emissions! Our analysis highlights the best (and worst) performers. Keep supporting clean transit choices! 🌍💚"
  },
  {
    "objectID": "MP02.html#references",
    "href": "MP02.html#references",
    "title": "🏆 The GTA IV Green Transit Awards 2025 🏆",
    "section": "2.14 📚 References",
    "text": "2.14 📚 References\n\nNational Transit Database (NTD)\nEnergy Information Administration (EIA)\nEnvironmental Protection Agency (EPA)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Shubh’s Website",
    "section": "",
    "text": "I am Shubh Goyal, a student at Baruch College. My expected graduation date is December 2025, and my field of employment is Data Analyst. I love playing badminton, watching web series, and exploring new places.\nMy Resume: file:///C:/Users/goyal/OneDrive/Desktop/Shubh%20Goyal.pdf"
  },
  {
    "objectID": "MP01/mp01.html",
    "href": "MP01/mp01.html",
    "title": "NYC Payroll Policy Analysis",
    "section": "",
    "text": "This report analyzes NYC payroll data to evaluate potential policies aimed at reducing taxpayer expenses. We examine three policies:\n1. Capping salaries at the mayoral level\n2. Increasing staffing to reduce overtime\n3. A custom policy proposal\nThe analysis is based on historical payroll data, and all calculations are made using standardized assumptions."
  },
  {
    "objectID": "MP01/mp01.html#data-preparation",
    "href": "MP01/mp01.html#data-preparation",
    "title": "NYC Payroll Policy Analysis",
    "section": "2.1 Data Preparation",
    "text": "2.1 Data Preparation\n\n\nShow Code 💡\n#|message: false\n#|warning: false\nlibrary(readr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(scales) \nlibrary(DT)"
  },
  {
    "objectID": "MP01/mp01.html#load-data",
    "href": "MP01/mp01.html#load-data",
    "title": "NYC Payroll Policy Analysis",
    "section": "2.2 Load Data",
    "text": "2.2 Load Data\n\n\nShow Code 💡\n#|message: false\n#|warning: false\npayroll_data &lt;- read_csv(\"C:/Users/goyal/OneDrive/Documents/MP01/data/mp01/nyc_payroll_export.csv\")"
  },
  {
    "objectID": "MP01/mp01.html#inspect-data",
    "href": "MP01/mp01.html#inspect-data",
    "title": "NYC Payroll Policy Analysis",
    "section": "2.3 Inspect Data",
    "text": "2.3 Inspect Data\n\n\nShow Code 💡\npayroll_data &lt;- payroll_data %&gt;%\nmutate(\nagency_name = str_to_title(agency_name),\nlast_name = str_to_title(last_name),\nfirst_name = str_to_title(first_name),\nwork_location_borough = str_to_title(work_location_borough),\ntitle_description = str_to_title(title_description),\nleave_status = str_to_title(leave_status_as_of_june_30)\n)\n\n\n\n\nShow Code 💡\npayroll_data &lt;- payroll_data %&gt;% \nmutate(base_salary = as.numeric(base_salary), \nreg_hours = as.numeric(regular_hours), \not_hours = as.numeric(ot_hours))\nglimpse(payroll_data)\n\n\nRows: 6,225,611\nColumns: 19\n$ fiscal_year                &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2…\n$ payroll_number             &lt;dbl&gt; 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67,…\n$ agency_name                &lt;chr&gt; \"Admin For Children's Svcs\", \"Admin For Chi…\n$ last_name                  &lt;chr&gt; \"Faye Fall\", \"Kilgore\", \"Wisdom\", \"Miller\",…\n$ first_name                 &lt;chr&gt; \"Sokhna\", \"Orlantha\", \"Cherise\", \"Moya-Gaye…\n$ mid_init                   &lt;chr&gt; \"M\", \"B\", \"M\", \"S\", \"M\", \"L\", \"O\", NA, \"N\",…\n$ agency_start_date          &lt;dttm&gt; 2023-11-20, 2023-08-28, 2022-10-24, 2023-0…\n$ work_location_borough      &lt;chr&gt; \"Bronx\", \"Brooklyn\", \"Manhattan\", \"Manhatta…\n$ title_description          &lt;chr&gt; \"Child Protective Specialist\", \"Child Prote…\n$ leave_status_as_of_june_30 &lt;chr&gt; \"ACTIVE\", \"ACTIVE\", \"ON LEAVE\", \"ON LEAVE\",…\n$ base_salary                &lt;dbl&gt; 62043, 62043, 43144, 62043, 60236, 62043, 6…\n$ pay_basis                  &lt;chr&gt; \"per Annum\", \"per Annum\", \"per Annum\", \"per…\n$ regular_hours              &lt;dbl&gt; 1050.00, 1470.00, 1251.50, 1400.75, 700.00,…\n$ regular_gross_paid         &lt;dbl&gt; 31267.96, 44660.96, 28649.20, 44515.43, 221…\n$ ot_hours                   &lt;dbl&gt; 12.00, 99.75, 30.00, 44.75, 53.00, 146.00, …\n$ total_ot_paid              &lt;dbl&gt; 425.00, 3859.84, 802.42, 1476.98, 1933.33, …\n$ total_other_pay            &lt;dbl&gt; 78.04, 78.14, 78.26, 78.37, 78.47, 78.86, 7…\n$ leave_status               &lt;chr&gt; \"Active\", \"Active\", \"On Leave\", \"On Leave\",…\n$ reg_hours                  &lt;dbl&gt; 1050.00, 1470.00, 1251.50, 1400.75, 700.00,…"
  },
  {
    "objectID": "MP01/mp01.html#mayor-eric-adamss-salary",
    "href": "MP01/mp01.html#mayor-eric-adamss-salary",
    "title": "NYC Payroll Policy Analysis",
    "section": "3.1 Mayor Eric Adams’s Salary",
    "text": "3.1 Mayor Eric Adams’s Salary\n\n\nShow Code 💡\nmayor_data &lt;- payroll_data %&gt;%\nfilter(str_detect( first_name, \"Eric\") & str_detect( last_name , \"Adams\")) %&gt;%\nselect( fiscal_year , title_description , agency_name , base_salary ) %&gt;%\n  arrange( fiscal_year )\nmayor_data %&gt;%\nmutate( base_salary = dollar( base_salary )) %&gt;%\ndatatable(options = list( searching = FALSE, paging = FALSE, info = FALSE))"
  },
  {
    "objectID": "MP01/mp01.html#calculation-of-total-compensation",
    "href": "MP01/mp01.html#calculation-of-total-compensation",
    "title": "NYC Payroll Policy Analysis",
    "section": "3.2 Calculation of Total Compensation",
    "text": "3.2 Calculation of Total Compensation\n\n\nShow Code 💡\npayroll_data &lt;- payroll_data %&gt;%\nmutate (total_compensation = case_when(\npay_basis == \"per Annum\" ~ base_salary,\npay_basis == \"per Hour\" ~ base_salary * regular_hours + (base_salary * 1.5 * ot_hours),\npay_basis == \"per Day\" ~ base_salary * (regular_hours / 7.5),TRUE ~ base_salary ) )\n\ndatatable(payroll_data %&gt;%\nselect(first_name, last_name, agency_name, title_description, pay_basis, base_salary, regular_hours, ot_hours, total_compensation) %&gt;%\narrange(desc(total_compensation)) %&gt;% \nslice_head(n = 10),options = list(scrollX = TRUE))"
  },
  {
    "objectID": "MP01/mp01.html#policy-1-capping-salaries-at-mayoral-level",
    "href": "MP01/mp01.html#policy-1-capping-salaries-at-mayoral-level",
    "title": "NYC Payroll Policy Analysis",
    "section": "5.1 Policy 1: Capping Salaries at Mayoral Level",
    "text": "5.1 Policy 1: Capping Salaries at Mayoral Level\n\n5.1.1 Compute the Mayor’s salary per year\n\n\nShow Code 💡\nmayor_salary &lt;- payroll_data %&gt;%\n  filter(title_description == \"Mayor\") %&gt;%\n  select(fiscal_year, total_compensation)\ndatatable(mayor_salary, options = list(scrollX = TRUE))\n\n\n\n\n\n\n\n\n5.1.2 Identify High Earners\n\n\nShow Code 💡\nhigh_salaries &lt;- payroll_data %&gt;%\ninner_join(mayor_salary, by = \"fiscal_year\", suffix = c(\"_emp\", \"_mayor\")) %&gt;%\nfilter(total_compensation_emp &gt; total_compensation_mayor)\n\n\n\n\n5.1.3 Total Savings\n\n\nShow Code 💡\ntotal_savings &lt;- sum(high_salaries$total_compensation_emp - high_salaries$total_compensation_mayor, na.rm = TRUE)\n\ndatatable(\n  high_salaries %&gt;%\n    select(fiscal_year, first_name, last_name, title_description, agency_name, total_compensation_emp, total_compensation_mayor) %&gt;%\n    slice_head(n = 100),  \n  options = list(scrollX = TRUE)\n)"
  },
  {
    "objectID": "MP01/mp01.html#policy-2-increasing-staffing-to-reduce-overtime-expenses",
    "href": "MP01/mp01.html#policy-2-increasing-staffing-to-reduce-overtime-expenses",
    "title": "NYC Payroll Policy Analysis",
    "section": "5.2 Policy 2: Increasing Staffing to Reduce Overtime Expenses",
    "text": "5.2 Policy 2: Increasing Staffing to Reduce Overtime Expenses\n\n5.2.1 Calculate total overtime\n\n\nShow Code 💡\novertime_reduction &lt;- payroll_data %&gt;%\ngroup_by(agency_name, title_description) %&gt;%\nsummarize( total_overtime_hours = sum(ot_hours, na.rm = TRUE), full_time_equivalent_needed = total_overtime_hours / 2000 ) %&gt;% arrange(desc(total_overtime_hours))\ndatatable(overtime_reduction, options = list(scrollX = TRUE))\n\n\n\n\n\n\n\n\n5.2.2 Total Potential Savings\n\n\nShow Code 💡\novertime_savings &lt;- payroll_data %&gt;%\ngroup_by(agency_name, title_description) %&gt;%\nsummarize( overtime_cost = sum(1.5 * base_salary * ot_hours, na.rm = TRUE),\nregular_cost = sum(base_salary * (ot_hours / 40), na.rm = TRUE),\npotential_savings = overtime_cost - regular_cost ) %&gt;%\narrange(desc(potential_savings))\ndatatable(overtime_savings, options = list(scrollX = TRUE))\n\n\n\n\n\n\n\n\n5.2.3 Total Agency Savings\n\n\nShow Code 💡\nagency_savings &lt;- overtime_savings %&gt;%\ngroup_by(agency_name) %&gt;%\nsummarize( total_overtime_cost = sum(overtime_cost, na.rm = TRUE),\ntotal_regular_cost = sum(regular_cost, na.rm = TRUE),\ntotal_savings = sum(potential_savings, na.rm = TRUE) ) %&gt;%\narrange(desc(total_savings))\ndatatable(agency_savings, options = list(scrollX = TRUE))"
  },
  {
    "objectID": "MP01/mp01.html#policy-3-overtime-reduction-through-strategy-hiring",
    "href": "MP01/mp01.html#policy-3-overtime-reduction-through-strategy-hiring",
    "title": "NYC Payroll Policy Analysis",
    "section": "5.3 Policy 3: Overtime Reduction Through Strategy Hiring",
    "text": "5.3 Policy 3: Overtime Reduction Through Strategy Hiring\n\n5.3.1 Overview\nMany NYC agencies rely heavily on overtime (OT) to compensate for staffing shortages, significantly inflating payroll costs. Instead of paying excessive overtime wages, the city could hire additional employees to reduce OT dependency.\nAnalysis Steps:\n\nIdentify High-Overtime Employees\nCompare Costs\nPotential Savings\nRecommendation\n\n\n\n5.3.2 Identify High-Overtime Employees\nFind employees with excessive overtime hours (e.g., more than 500 OT hours per year).\n\n\nShow Code 💡\nhigh_overtime_employees &lt;- payroll_data %&gt;%\nfilter(ot_hours &gt; 500) %&gt;%\ngroup_by(title_description, agency_name) %&gt;%\nsummarize( avg_overtime_hours = mean(ot_hours, na.rm = TRUE),\ntotal_overtime_pay = sum(total_ot_paid, na.rm = TRUE), num_high_overtime_employees = n(),\navg_base_salary = mean(base_salary, na.rm = TRUE) ) %&gt;%\narrange(desc(total_overtime_pay))\ndatatable(high_overtime_employees, options = list(scrollX = TRUE))\n\n\n\n\n\n\n\n\n5.3.3 Compare Costs of Overtime vs. Hiring\nAssuming a standard 2,000-hour work year\n\n\nShow Code 💡\nestimated_new_hires &lt;- high_overtime_employees %&gt;%\nmutate( equivalent_full_time_positions = round(avg_overtime_hours / 2000, 1), total_new_hire_salary = equivalent_full_time_positions * avg_base_salary ) %&gt;%\nselect(agency_name, title_description, num_high_overtime_employees, equivalent_full_time_positions, total_overtime_pay, total_new_hire_salary)\ndatatable(estimated_new_hires, options = list(scrollX = TRUE))\n\n\n\n\n\n\n\n\n5.3.4 Calculate Potential Savings\nCompare the total overtime cost vs. the cost of hiring new employees\n\n\nShow Code 💡\npotential_savings &lt;- estimated_new_hires %&gt;%\nmutate(savings = total_overtime_pay - total_new_hire_salary) %&gt;%\narrange(desc(savings))\ndatatable(potential_savings, options = list(scrollX = TRUE))\n\n\n\n\n\n\n\n\n5.3.5 Identify Agencies with Highest OT Dependency\nFind agencies where overtime reliance is highest\n\n\nShow Code 💡\nlibrary(dplyr)\n\novertime_by_agency &lt;- payroll_data %&gt;%\n  group_by(agency_name) %&gt;%\n  summarize(\n    total_overtime_pay = sum(total_ot_paid, na.rm = TRUE),\n    total_base_salary = sum(base_salary, na.rm = TRUE),\n    ot_to_salary_ratio = total_overtime_pay / total_base_salary  # Corrected calculation\n  ) %&gt;%\n  arrange(desc(ot_to_salary_ratio))\n\n\n\n\n5.3.6 Recommendations\n\nAgencies with the highest OT-to-salary ratios should prioritize hiring over paying OT.\nJob roles with excessive OT hours (e.g., NYPD, FDNY, sanitation workers) should be assessed for staffing shortages.\nThe city could cap annual OT hours per employee and use the savings to hire additional workers"
  }
]